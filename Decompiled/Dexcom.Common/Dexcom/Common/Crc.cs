// Type: Dexcom.Common.Crc
// Assembly: Dexcom.Common, Version=4.0.0.1, Culture=neutral, PublicKeyToken=71077f6d94a459dc
// MVID: B95A59FD-1598-4EA8-B1F5-D812FE5A6802
// Assembly location: C:\Program Files (x86)\Dexcom\Dexcom Studio 12.0.3.43\Dexcom.Common.dll

using System;

namespace Dexcom.Common
{
  public class Crc
  {
    private static byte[] m_crc8Table = new byte[256]
    {
      (byte) 0,
      (byte) 7,
      (byte) 14,
      (byte) 9,
      (byte) 28,
      (byte) 27,
      (byte) 18,
      (byte) 21,
      (byte) 56,
      (byte) 63,
      (byte) 54,
      (byte) 49,
      (byte) 36,
      (byte) 35,
      (byte) 42,
      (byte) 45,
      (byte) 112,
      (byte) 119,
      (byte) 126,
      (byte) 121,
      (byte) 108,
      (byte) 107,
      (byte) 98,
      (byte) 101,
      (byte) 72,
      (byte) 79,
      (byte) 70,
      (byte) 65,
      (byte) 84,
      (byte) 83,
      (byte) 90,
      (byte) 93,
      (byte) 224,
      (byte) 231,
      (byte) 238,
      (byte) 233,
      (byte) 252,
      (byte) 251,
      (byte) 242,
      (byte) 245,
      (byte) 216,
      (byte) 223,
      (byte) 214,
      (byte) 209,
      (byte) 196,
      (byte) 195,
      (byte) 202,
      (byte) 205,
      (byte) 144,
      (byte) 151,
      (byte) 158,
      (byte) 153,
      (byte) 140,
      (byte) 139,
      (byte) 130,
      (byte) 133,
      (byte) 168,
      (byte) 175,
      (byte) 166,
      (byte) 161,
      (byte) 180,
      (byte) 179,
      (byte) 186,
      (byte) 189,
      (byte) 199,
      (byte) 192,
      (byte) 201,
      (byte) 206,
      (byte) 219,
      (byte) 220,
      (byte) 213,
      (byte) 210,
      byte.MaxValue,
      (byte) 248,
      (byte) 241,
      (byte) 246,
      (byte) 227,
      (byte) 228,
      (byte) 237,
      (byte) 234,
      (byte) 183,
      (byte) 176,
      (byte) 185,
      (byte) 190,
      (byte) 171,
      (byte) 172,
      (byte) 165,
      (byte) 162,
      (byte) 143,
      (byte) 136,
      (byte) 129,
      (byte) 134,
      (byte) 147,
      (byte) 148,
      (byte) 157,
      (byte) 154,
      (byte) 39,
      (byte) 32,
      (byte) 41,
      (byte) 46,
      (byte) 59,
      (byte) 60,
      (byte) 53,
      (byte) 50,
      (byte) 31,
      (byte) 24,
      (byte) 17,
      (byte) 22,
      (byte) 3,
      (byte) 4,
      (byte) 13,
      (byte) 10,
      (byte) 87,
      (byte) 80,
      (byte) 89,
      (byte) 94,
      (byte) 75,
      (byte) 76,
      (byte) 69,
      (byte) 66,
      (byte) 111,
      (byte) 104,
      (byte) 97,
      (byte) 102,
      (byte) 115,
      (byte) 116,
      (byte) 125,
      (byte) 122,
      (byte) 137,
      (byte) 142,
      (byte) 135,
      (byte) sbyte.MinValue,
      (byte) 149,
      (byte) 146,
      (byte) 155,
      (byte) 156,
      (byte) 177,
      (byte) 182,
      (byte) 191,
      (byte) 184,
      (byte) 173,
      (byte) 170,
      (byte) 163,
      (byte) 164,
      (byte) 249,
      (byte) 254,
      (byte) 247,
      (byte) 240,
      (byte) 229,
      (byte) 226,
      (byte) 235,
      (byte) 236,
      (byte) 193,
      (byte) 198,
      (byte) 207,
      (byte) 200,
      (byte) 221,
      (byte) 218,
      (byte) 211,
      (byte) 212,
      (byte) 105,
      (byte) 110,
      (byte) 103,
      (byte) 96,
      (byte) 117,
      (byte) 114,
      (byte) 123,
      (byte) 124,
      (byte) 81,
      (byte) 86,
      (byte) 95,
      (byte) 88,
      (byte) 77,
      (byte) 74,
      (byte) 67,
      (byte) 68,
      (byte) 25,
      (byte) 30,
      (byte) 23,
      (byte) 16,
      (byte) 5,
      (byte) 2,
      (byte) 11,
      (byte) 12,
      (byte) 33,
      (byte) 38,
      (byte) 47,
      (byte) 40,
      (byte) 61,
      (byte) 58,
      (byte) 51,
      (byte) 52,
      (byte) 78,
      (byte) 73,
      (byte) 64,
      (byte) 71,
      (byte) 82,
      (byte) 85,
      (byte) 92,
      (byte) 91,
      (byte) 118,
      (byte) 113,
      (byte) 120,
      (byte) 127,
      (byte) 106,
      (byte) 109,
      (byte) 100,
      (byte) 99,
      (byte) 62,
      (byte) 57,
      (byte) 48,
      (byte) 55,
      (byte) 34,
      (byte) 37,
      (byte) 44,
      (byte) 43,
      (byte) 6,
      (byte) 1,
      (byte) 8,
      (byte) 15,
      (byte) 26,
      (byte) 29,
      (byte) 20,
      (byte) 19,
      (byte) 174,
      (byte) 169,
      (byte) 160,
      (byte) 167,
      (byte) 178,
      (byte) 181,
      (byte) 188,
      (byte) 187,
      (byte) 150,
      (byte) 145,
      (byte) 152,
      (byte) 159,
      (byte) 138,
      (byte) 141,
      (byte) 132,
      (byte) 131,
      (byte) 222,
      (byte) 217,
      (byte) 208,
      (byte) 215,
      (byte) 194,
      (byte) 197,
      (byte) 204,
      (byte) 203,
      (byte) 230,
      (byte) 225,
      (byte) 232,
      (byte) 239,
      (byte) 250,
      (byte) 253,
      (byte) 244,
      (byte) 243
    };
    private static ushort[] m_crc16Table = new ushort[256]
    {
      (ushort) 0,
      (ushort) 4129,
      (ushort) 8258,
      (ushort) 12387,
      (ushort) 16516,
      (ushort) 20645,
      (ushort) 24774,
      (ushort) 28903,
      (ushort) 33032,
      (ushort) 37161,
      (ushort) 41290,
      (ushort) 45419,
      (ushort) 49548,
      (ushort) 53677,
      (ushort) 57806,
      (ushort) 61935,
      (ushort) 4657,
      (ushort) 528,
      (ushort) 12915,
      (ushort) 8786,
      (ushort) 21173,
      (ushort) 17044,
      (ushort) 29431,
      (ushort) 25302,
      (ushort) 37689,
      (ushort) 33560,
      (ushort) 45947,
      (ushort) 41818,
      (ushort) 54205,
      (ushort) 50076,
      (ushort) 62463,
      (ushort) 58334,
      (ushort) 9314,
      (ushort) 13379,
      (ushort) 1056,
      (ushort) 5121,
      (ushort) 25830,
      (ushort) 29895,
      (ushort) 17572,
      (ushort) 21637,
      (ushort) 42346,
      (ushort) 46411,
      (ushort) 34088,
      (ushort) 38153,
      (ushort) 58862,
      (ushort) 62927,
      (ushort) 50604,
      (ushort) 54669,
      (ushort) 13907,
      (ushort) 9842,
      (ushort) 5649,
      (ushort) 1584,
      (ushort) 30423,
      (ushort) 26358,
      (ushort) 22165,
      (ushort) 18100,
      (ushort) 46939,
      (ushort) 42874,
      (ushort) 38681,
      (ushort) 34616,
      (ushort) 63455,
      (ushort) 59390,
      (ushort) 55197,
      (ushort) 51132,
      (ushort) 18628,
      (ushort) 22757,
      (ushort) 26758,
      (ushort) 30887,
      (ushort) 2112,
      (ushort) 6241,
      (ushort) 10242,
      (ushort) 14371,
      (ushort) 51660,
      (ushort) 55789,
      (ushort) 59790,
      (ushort) 63919,
      (ushort) 35144,
      (ushort) 39273,
      (ushort) 43274,
      (ushort) 47403,
      (ushort) 23285,
      (ushort) 19156,
      (ushort) 31415,
      (ushort) 27286,
      (ushort) 6769,
      (ushort) 2640,
      (ushort) 14899,
      (ushort) 10770,
      (ushort) 56317,
      (ushort) 52188,
      (ushort) 64447,
      (ushort) 60318,
      (ushort) 39801,
      (ushort) 35672,
      (ushort) 47931,
      (ushort) 43802,
      (ushort) 27814,
      (ushort) 31879,
      (ushort) 19684,
      (ushort) 23749,
      (ushort) 11298,
      (ushort) 15363,
      (ushort) 3168,
      (ushort) 7233,
      (ushort) 60846,
      (ushort) 64911,
      (ushort) 52716,
      (ushort) 56781,
      (ushort) 44330,
      (ushort) 48395,
      (ushort) 36200,
      (ushort) 40265,
      (ushort) 32407,
      (ushort) 28342,
      (ushort) 24277,
      (ushort) 20212,
      (ushort) 15891,
      (ushort) 11826,
      (ushort) 7761,
      (ushort) 3696,
      (ushort) 65439,
      (ushort) 61374,
      (ushort) 57309,
      (ushort) 53244,
      (ushort) 48923,
      (ushort) 44858,
      (ushort) 40793,
      (ushort) 36728,
      (ushort) 37256,
      (ushort) 33193,
      (ushort) 45514,
      (ushort) 41451,
      (ushort) 53516,
      (ushort) 49453,
      (ushort) 61774,
      (ushort) 57711,
      (ushort) 4224,
      (ushort) 161,
      (ushort) 12482,
      (ushort) 8419,
      (ushort) 20484,
      (ushort) 16421,
      (ushort) 28742,
      (ushort) 24679,
      (ushort) 33721,
      (ushort) 37784,
      (ushort) 41979,
      (ushort) 46042,
      (ushort) 49981,
      (ushort) 54044,
      (ushort) 58239,
      (ushort) 62302,
      (ushort) 689,
      (ushort) 4752,
      (ushort) 8947,
      (ushort) 13010,
      (ushort) 16949,
      (ushort) 21012,
      (ushort) 25207,
      (ushort) 29270,
      (ushort) 46570,
      (ushort) 42443,
      (ushort) 38312,
      (ushort) 34185,
      (ushort) 62830,
      (ushort) 58703,
      (ushort) 54572,
      (ushort) 50445,
      (ushort) 13538,
      (ushort) 9411,
      (ushort) 5280,
      (ushort) 1153,
      (ushort) 29798,
      (ushort) 25671,
      (ushort) 21540,
      (ushort) 17413,
      (ushort) 42971,
      (ushort) 47098,
      (ushort) 34713,
      (ushort) 38840,
      (ushort) 59231,
      (ushort) 63358,
      (ushort) 50973,
      (ushort) 55100,
      (ushort) 9939,
      (ushort) 14066,
      (ushort) 1681,
      (ushort) 5808,
      (ushort) 26199,
      (ushort) 30326,
      (ushort) 17941,
      (ushort) 22068,
      (ushort) 55628,
      (ushort) 51565,
      (ushort) 63758,
      (ushort) 59695,
      (ushort) 39368,
      (ushort) 35305,
      (ushort) 47498,
      (ushort) 43435,
      (ushort) 22596,
      (ushort) 18533,
      (ushort) 30726,
      (ushort) 26663,
      (ushort) 6336,
      (ushort) 2273,
      (ushort) 14466,
      (ushort) 10403,
      (ushort) 52093,
      (ushort) 56156,
      (ushort) 60223,
      (ushort) 64286,
      (ushort) 35833,
      (ushort) 39896,
      (ushort) 43963,
      (ushort) 48026,
      (ushort) 19061,
      (ushort) 23124,
      (ushort) 27191,
      (ushort) 31254,
      (ushort) 2801,
      (ushort) 6864,
      (ushort) 10931,
      (ushort) 14994,
      (ushort) 64814,
      (ushort) 60687,
      (ushort) 56684,
      (ushort) 52557,
      (ushort) 48554,
      (ushort) 44427,
      (ushort) 40424,
      (ushort) 36297,
      (ushort) 31782,
      (ushort) 27655,
      (ushort) 23652,
      (ushort) 19525,
      (ushort) 15522,
      (ushort) 11395,
      (ushort) 7392,
      (ushort) 3265,
      (ushort) 61215,
      (ushort) 65342,
      (ushort) 53085,
      (ushort) 57212,
      (ushort) 44955,
      (ushort) 49082,
      (ushort) 36825,
      (ushort) 40952,
      (ushort) 28183,
      (ushort) 32310,
      (ushort) 20053,
      (ushort) 24180,
      (ushort) 11923,
      (ushort) 16050,
      (ushort) 3793,
      (ushort) 7920
    };
    private static uint[] m_crc32Table = new uint[256];

    static Crc()
    {
      Crc.DoGenerateCrc32Table();
    }

    public static byte CalculateCrc8(uint data)
    {
      byte num1 = (byte) 0;
      byte num2 = (byte) (data >> 24);
      byte num3 = Crc.m_crc8Table[(int) num1 ^ (int) num2];
      byte num4 = (byte) (data >> 16);
      byte num5 = Crc.m_crc8Table[(int) num3 ^ (int) num4];
      byte num6 = (byte) (data >> 8);
      byte num7 = Crc.m_crc8Table[(int) num5 ^ (int) num6];
      byte num8 = (byte) data;
      return Crc.m_crc8Table[(int) num7 ^ (int) num8];
    }

    public static ushort CalculateCrc16(byte[] buf, int start, int end)
    {
      ushort num = (ushort) 0;
      for (int index = start; index < end; ++index)
        num = (ushort) ((uint) num << 8 ^ (uint) Crc.m_crc16Table[((int) num >> 8 ^ (int) buf[index]) & (int) byte.MaxValue]);
      return num;
    }

    public static uint CalculateCrc32(byte[] buf, int start, int end)
    {
      uint num = uint.MaxValue;
      for (int index = start; index < end; ++index)
        num = num >> 8 ^ Crc.m_crc32Table[(IntPtr) (num & (uint) byte.MaxValue ^ (uint) buf[index])];
      return num ^ uint.MaxValue;
    }

    private static void DoGenerateCrc32Table()
    {
      uint num = 79764919U;
      for (uint reference = 0U; reference <= (uint) byte.MaxValue; ++reference)
      {
        Crc.m_crc32Table[(IntPtr) reference] = Crc.Reflect(reference, '\b') << 24;
        for (uint index = 0U; index < 8U; ++index)
          Crc.m_crc32Table[(IntPtr) reference] = (Crc.m_crc32Table[(IntPtr) reference] & (uint) int.MinValue) <= 0U ? Crc.m_crc32Table[(IntPtr) reference] << 1 : Crc.m_crc32Table[(IntPtr) reference] << 1 ^ num;
        Crc.m_crc32Table[(IntPtr) reference] = Crc.Reflect(Crc.m_crc32Table[(IntPtr) reference], ' ');
      }
    }

    private static uint Reflect(uint reference, char ch)
    {
      uint num = 0U;
      for (int index = 1; index < (int) ch + 1; ++index)
      {
        if ((reference & 1U) > 0U)
          num |= 1U << (int) (ushort) ((uint) ch - (uint) index);
        reference >>= 1;
      }
      return num;
    }
  }
}
