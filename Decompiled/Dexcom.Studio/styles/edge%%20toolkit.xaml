<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Custom="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">
  <ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{x:Type Button}">
    <FrameworkTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                      Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                      Duration="00:00:00.0010000">
          <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
        </ColorAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                      Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
          <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
          <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
        </ColorAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
          <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
          <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                      Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
          <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
          <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
        </ColorAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                      Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
          <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
          <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
        </ColorAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="PressedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="PressedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </FrameworkTemplate.Resources>
    <Grid>
      <Border x:Name="MainBorder" Background="{TemplateBinding Control.Background}"
              BorderBrush="{TemplateBinding Control.BorderBrush}"
              BorderThickness="{TemplateBinding Control.BorderThickness}"/>
      <Border x:Name="HoverBorder" BorderThickness="{TemplateBinding Control.BorderThickness}"
              Background="{DynamicResource HoverBrush}">
        <UIElement.OpacityMask>
          <RadialGradientBrush GradientOrigin="0.503,0.938">
            <Brush.RelativeTransform>
              <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                <TranslateTransform X="0" Y="0"/>
              </TransformGroup>
            </Brush.RelativeTransform>
            <GradientStop Color="#00000000" Offset="0"/>
            <GradientStop Color="#00000000" Offset="1"/>
          </RadialGradientBrush>
        </UIElement.OpacityMask>
      </Border>
      <Border SnapsToDevicePixels="true" Margin="1,1,1,0" BorderBrush="White" BorderThickness="0,1,0,0"
              IsHitTestVisible="false"/>
      <Polygon x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="8,8,3,3"
               Fill="{DynamicResource GlyphBrush}" Stretch="Uniform" Points="0,10 10,10 10,0"/>
      <Border x:Name="ShineBorder" Margin="1,1,1,1" IsHitTestVisible="false"
              Background="{DynamicResource ShineBrush}"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type DataGrid}">
    <Setter Property="Control.Background" Value="#FFFFFF"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.BorderBrush" Value="#FF688CAF"/>
    <Setter Property="Control.BorderThickness" Value="1,1,1,1"/>
    <Setter Property="DataGrid.RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}">
            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
              <Control.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Button Template="{StaticResource SelectAllButtonTemplate}" Command="{x:Static DataGrid.SelectAllCommand}"
                            Focusable="false"
                            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}"/>
                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1"
                                                    Visibility="{Binding Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding ContentControl.Content}"
                                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.ColumnSpan="2" Grid.Row="1"
                                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="false"
                                            CanVerticallyScroll="false"/>
                    <ScrollBar x:Name="PART_VerticalScrollBar"
                               Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Grid.Column="2"
                               Grid.Row="1" Orientation="Vertical" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                               Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                               Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <Grid Column="1" Row="2">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding Path=NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <ScrollBar x:Name="PART_HorizontalScrollBar"
                                 Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Grid.Column="1"
                                 Orientation="Horizontal" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                                 Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                                 Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </Control.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ItemsControl.IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>
  <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.Width" Value="2"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="FrameworkElement.Cursor" Value="SizeWE"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="20"/>
    <Setter Property="Control.Foreground" Value="Black"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            Duration="00:00:00.0010000">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="MainBorder" Padding="{TemplateBinding Control.Padding}"
                    Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}"
                    CornerRadius="0,0,0,0" BorderThickness="1,1,1,1" Grid.ColumnSpan="2"/>
            <Border x:Name="HoverBorder" BorderThickness="1,1,1,1" Padding="{TemplateBinding Control.Padding}"
                    Background="{DynamicResource HoverBrush}" BorderBrush="{DynamicResource HighlightBorderBrush}"
                    CornerRadius="0,0,0,0" Grid.ColumnSpan="2">
              <UIElement.OpacityMask>
                <RadialGradientBrush GradientOrigin="0.503,0.938">
                  <Brush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                      <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </Brush.RelativeTransform>
                  <GradientStop Color="#00000000" Offset="0"/>
                  <GradientStop Color="#00000000" Offset="1"/>
                </RadialGradientBrush>
              </UIElement.OpacityMask>
            </Border>
            <Border x:Name="SortBorder" BorderThickness="1,1,1,1" Padding="{TemplateBinding Control.Padding}"
                    Background="{DynamicResource HoverBrush}" BorderBrush="{DynamicResource HighlightBorderBrush}"
                    CornerRadius="0,0,0,0" Grid.ColumnSpan="2" Opacity="0"/>
            <Rectangle x:Name="Shine" Opacity="1" RadiusX="0" RadiusY="0" Margin="1,1,1,1" VerticalAlignment="Stretch"
                       Height="Auto" Fill="{DynamicResource ShineBrush}" Grid.ColumnSpan="2" Stroke="{x:Null}"/>
            <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}" Grid.ColumnSpan="2">
              <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
              </Border.BorderBrush>
            </Border>
            <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center"/>
            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M 0,0 L 1,0 0.5,1 Z" Stretch="Fill" Grid.Column="1"
                  Width="8" Height="6" Fill="White" Margin="0,0,8,0" VerticalAlignment="Center"
                  RenderTransformOrigin="0.5,0.4"/>
            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"
                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Value="{x:Null}" Property="DataGridColumnHeader.SortDirection"/>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Value="{x:Null}" Property="DataGridColumnHeader.SortDirection"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="SortArrow" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="SortBorder" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="SortBorder" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="DataGridColumnHeader.DisplayIndex" Value="0">
              <Setter TargetName="PART_LeftHeaderGripper" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type DataGridRow}">
    <Style.Triggers>
      <Trigger Property="DataGridRow.IsSelected" Value="true">
        <Setter Property="Control.Foreground">
          <Setter.Value>
            <SolidColorBrush Color="#FFFF0000"/>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            Duration="00:00:00.0010000">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
              </DoubleAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            Duration="00:00:00.0010000">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                <SplineColorKeyFrame KeyTime="00:00:00.2500000" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.99"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border x:Name="MainBorder" Background="{DynamicResource WindowBackgroundBrush}"
                    BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2"
                    Padding="0,0,0,0"/>
            <Border x:Name="SelectedBorder" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}"
                    Opacity="0">
              <Border.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                  <GradientStop Color="#19C8D6F3" Offset="0.0"/>
                  <GradientStop Color="{DynamicResource HighlightColorBottomGradient}" Offset="1.0"/>
                  <GradientStop Color="#B08E96A5" Offset="0.223"/>
                </LinearGradientBrush>
              </Border.Background>
              <UIElement.OpacityMask>
                <RadialGradientBrush GradientOrigin="0.503,0.938">
                  <Brush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                      <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </Brush.RelativeTransform>
                  <GradientStop Color="#FF000000" Offset="0"/>
                  <GradientStop Color="#FF000000" Offset="1"/>
                </RadialGradientBrush>
              </UIElement.OpacityMask>
            </Border>
            <Border x:Name="HoverBorder" BorderThickness="1,1,1,1" Background="{DynamicResource HoverBrush}"
                    BorderBrush="{DynamicResource HighlightBorderBrush}" CornerRadius="0,0,0,0">
              <UIElement.OpacityMask>
                <RadialGradientBrush GradientOrigin="0.503,0.938">
                  <Brush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                      <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </Brush.RelativeTransform>
                  <GradientStop Color="#00000000" Offset="0"/>
                  <GradientStop Color="#00000000" Offset="1"/>
                </RadialGradientBrush>
              </UIElement.OpacityMask>
            </Border>
            <Border x:Name="DGR_Border" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
              <SelectiveScrollingGrid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding DataGridRow.ItemsPanel}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                <DataGridRowHeader x:Name="RowHeader" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Grid.RowSpan="2"
                                   Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
              </SelectiveScrollingGrid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
              <Setter Property="Control.BorderThickness" Value="3"/>
              <Setter Property="Control.BorderBrush" Value="Red"/>
              <Setter Property="Control.Foreground" Value="Blue"/>
              <Setter Property="Control.FontSize" Value="16"/>
              <Setter TargetName="RowHeader" Property="Control.Background" Value="Red"/>
            </Trigger>
            <Trigger Property="DataGridRow.IsSelected" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Background" Value="#00FFFFFF"/>
    <Setter Property="Control.Foreground">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource BlackColor}"/>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type DataGridCell}">
    <Style.Triggers>
      <Trigger Property="DataGridCell.IsSelected" Value="true">
        <Setter Property="Control.Foreground" Value="Black"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border Background="Transparent" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0"
                  SnapsToDevicePixels="true">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.Height" Value="8"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="FrameworkElement.Cursor" Value="SizeNS"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="FrameworkElement.MinWidth" Value="20"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="HoverOn">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            Duration="00:00:00.0010000">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
              </DoubleAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            Duration="00:00:00.0010000">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                <SplineColorKeyFrame KeyTime="00:00:00.2500000" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.99"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Custom:DataGridHeaderBorder Border.Background="{TemplateBinding Control.Background}" Border.BorderThickness="0,1,0,0"
                                         FrameworkElement.Margin="0,-1,0,0" Border.Padding="{TemplateBinding Control.Padding}"
                                         IsHovered="{TemplateBinding UIElement.IsMouseOver}"
                                         IsPressed="{TemplateBinding ButtonBase.IsPressed}"
                                         IsSelected="{TemplateBinding DataGridRowHeader.IsRowSelected}" Orientation="Horizontal"
                                         SeparatorBrush="{TemplateBinding DataGridRowHeader.SeparatorBrush}"
                                         SeparatorVisibility="{TemplateBinding DataGridRowHeader.SeparatorVisibility}"
                                         Border.BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HorizontalGridLinesBrush}">
              <Grid>
                <Border x:Name="MainBorder" Background="{DynamicResource WindowBackgroundBrush}"
                        BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2"
                        Padding="0,0,0,0"/>
                <Border x:Name="SelectedBorder" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}"
                        Opacity="0">
                  <Border.Background>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                      <GradientStop Color="#19C8D6F3" Offset="0.0"/>
                      <GradientStop Color="{DynamicResource HighlightColorBottomGradient}" Offset="1.0"/>
                    </LinearGradientBrush>
                  </Border.Background>
                  <UIElement.OpacityMask>
                    <RadialGradientBrush GradientOrigin="0.503,0.938">
                      <Brush.RelativeTransform>
                        <TransformGroup>
                          <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                          <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                          <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                          <TranslateTransform X="0" Y="0"/>
                        </TransformGroup>
                      </Brush.RelativeTransform>
                      <GradientStop Color="#FF000000" Offset="0"/>
                      <GradientStop Color="#FF000000" Offset="1"/>
                    </RadialGradientBrush>
                  </UIElement.OpacityMask>
                </Border>
                <Border x:Name="HoverBorder" BorderThickness="1,1,1,1" Background="{DynamicResource HoverBrush}"
                        BorderBrush="{DynamicResource HighlightBorderBrush}" CornerRadius="0,0,0,0">
                  <UIElement.OpacityMask>
                    <RadialGradientBrush GradientOrigin="0.503,0.938">
                      <Brush.RelativeTransform>
                        <TransformGroup>
                          <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                          <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                          <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                          <TranslateTransform X="0" Y="0"/>
                        </TransformGroup>
                      </Brush.RelativeTransform>
                      <GradientStop Color="#00000000" Offset="0"/>
                      <GradientStop Color="#00000000" Offset="1"/>
                    </RadialGradientBrush>
                  </UIElement.OpacityMask>
                </Border>
                <StackPanel Orientation="Horizontal">
                  <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"/>
                  <Control SnapsToDevicePixels="false"
                           Template="{Binding Path=ValidationErrorTemplate, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridRow}}}"
                           Visibility="{Binding Path=(Validation.HasError), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridRow}}, Converter={BooleanToVisibilityConverter}}"/>
                </StackPanel>
              </Grid>
            </Custom:DataGridHeaderBorder>
            <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top">
              <FrameworkElement.Style>
                <Style TargetType="{x:Type Thumb}">
                  <Setter Property="FrameworkElement.Height" Value="8"/>
                  <Setter Property="Control.Background" Value="#00FFFFFF"/>
                  <Setter Property="FrameworkElement.Cursor" Value="SizeNS"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"/>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </FrameworkElement.Style>
            </Thumb>
            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom">
              <FrameworkElement.Style>
                <Style TargetType="{x:Type Thumb}">
                  <Setter Property="FrameworkElement.Height" Value="8"/>
                  <Setter Property="Control.Background" Value="#00FFFFFF"/>
                  <Setter Property="FrameworkElement.Cursor" Value="SizeNS"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"/>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </FrameworkElement.Style>
            </Thumb>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="DataGridRowHeader.IsRowSelected" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DataGridRowHeaderBackgroundStyle" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Control.Background" Value="Gray"/>
  </Style>
  <Style x:Key="NuclearCalendar" TargetType="{x:Type Calendar}">
    <Setter Property="Control.Foreground" Value="#FF333333"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
    <Setter Property="Control.BorderThickness" Value="1,1,1,1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel x:Name="PART_Root" HorizontalAlignment="Center" Background="{x:Null}">
            <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Calendar}">
    <Setter Property="Control.Foreground" Value="#FF333333"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
    <Setter Property="Control.BorderThickness" Value="1,1,1,1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel x:Name="PART_Root" HorizontalAlignment="Center" Background="{x:Null}">
            <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type CalendarItem}">
    <Setter Property="Control.Background" Value="#FFFFFFFF"/>
    <Setter Property="FrameworkElement.Margin" Value="0,3,0,3"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarItem}">
          <FrameworkTemplate.Resources>
            <DataTemplate x:Key="DayTitleTemplate">
              <TextBlock HorizontalAlignment="Center" Margin="0,6,0,6" VerticalAlignment="Center" FontFamily="Verdana"
                         FontSize="9.5" FontWeight="Bold" Foreground="#FF333333" Text="{Binding}"/>
            </DataTemplate>
          </FrameworkTemplate.Resources>
          <Grid x:Name="PART_Root">
            <FrameworkElement.Resources>
              <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF"/>
            </FrameworkElement.Resources>
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1,1,1,1">
              <Border BorderBrush="#FFFFFFFF" BorderThickness="2,2,2,2" CornerRadius="1,1,1,1">
                <Grid>
                  <FrameworkElement.Resources>
                    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                      <Grid Cursor="Hand">
                        <ContentPresenter x:Name="buttonContent" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          Margin="1,4,1,9" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          TextElement.Foreground="#FF333333" Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"/>
                      </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                      <Grid Cursor="Hand">
                        <Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1"/>
                        <Grid>
                          <Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Right" Margin="0,-6,14,0"
                                VerticalAlignment="Center" Width="6" Height="10"
                                Data="M 282.875,231.875 L 282.875,240.375 288.625,236 Z"/>
                        </Grid>
                      </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                      <Grid Cursor="Hand">
                        <Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1"/>
                        <Grid>
                          <Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Left" Margin="14,-6,0,0"
                                VerticalAlignment="Center" Width="6" Height="10"
                                Data="M 288.75,232.25 L 288.75,240.625 283,236.625 Z"/>
                        </Grid>
                      </Grid>
                    </ControlTemplate>
                  </FrameworkElement.Resources>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Button x:Name="PART_PreviousButton" HorizontalAlignment="Left" Width="28" Height="20" Focusable="false"
                          Grid.Column="0" Grid.Row="0">
                    <Control.Template>
                      <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                          <Storyboard x:Key="HoverOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                          Duration="00:00:00.0010000">
                              <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                              <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                              <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                              <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                          <Storyboard x:Key="HoverOff">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                              <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                              <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                              <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                              <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                          </Storyboard>
                          <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                          <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                        </FrameworkTemplate.Resources>
                        <Grid Cursor="Hand">
                          <Border x:Name="MainBorder" Background="{TemplateBinding Control.Background}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                                  BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="5,5,5,5"/>
                          <Border x:Name="HoverBorder" BorderThickness="{TemplateBinding Control.BorderThickness}"
                                  CornerRadius="5,5,5,5" Background="{DynamicResource HoverBrush}">
                            <UIElement.OpacityMask>
                              <RadialGradientBrush GradientOrigin="0.503,0.938">
                                <Brush.RelativeTransform>
                                  <TransformGroup>
                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                    <TranslateTransform X="0" Y="0"/>
                                  </TransformGroup>
                                </Brush.RelativeTransform>
                                <GradientStop Color="#00000000" Offset="0"/>
                                <GradientStop Color="#00000000" Offset="1"/>
                              </RadialGradientBrush>
                            </UIElement.OpacityMask>
                          </Border>
                          <Grid>
                            <Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Width="6"
                                  Height="10" Data="M 288.75,232.25 L 288.75,240.625 283,236.625 Z"/>
                          </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <TriggerBase.ExitActions>
                              <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </TriggerBase.ExitActions>
                            <TriggerBase.EnterActions>
                              <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </TriggerBase.EnterActions>
                          </Trigger>
                          <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <TriggerBase.ExitActions>
                              <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </TriggerBase.ExitActions>
                            <TriggerBase.EnterActions>
                              <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </TriggerBase.EnterActions>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Control.Template>
                  </Button>
                  <Button x:Name="PART_HeaderButton" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10.5"
                          FontWeight="Bold" Focusable="false" Grid.Column="1" Grid.Row="0">
                    <Control.Template>
                      <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                          <Storyboard x:Key="HoverOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                          Duration="00:00:00.0010000">
                              <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                              <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                              <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                              <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                          <Storyboard x:Key="HoverOff">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                              <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                              <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                              <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                              <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                          </Storyboard>
                          <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                          <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                        </FrameworkTemplate.Resources>
                        <Grid Cursor="Hand">
                          <Border x:Name="MainBorder" Background="{TemplateBinding Control.Background}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                                  BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="5,5,5,5"/>
                          <Border x:Name="HoverBorder" BorderThickness="{TemplateBinding Control.BorderThickness}"
                                  CornerRadius="5,5,5,5" Background="{DynamicResource HoverBrush}">
                            <UIElement.OpacityMask>
                              <RadialGradientBrush GradientOrigin="0.503,0.938">
                                <Brush.RelativeTransform>
                                  <TransformGroup>
                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                    <TranslateTransform X="0" Y="0"/>
                                  </TransformGroup>
                                </Brush.RelativeTransform>
                                <GradientStop Color="#00000000" Offset="0"/>
                                <GradientStop Color="#00000000" Offset="1"/>
                              </RadialGradientBrush>
                            </UIElement.OpacityMask>
                          </Border>
                          <ContentPresenter x:Name="buttonContent" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                            Margin="14,4,14,4" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                            TextElement.Foreground="#FF333333" Content="{TemplateBinding ContentControl.Content}"
                                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <TriggerBase.ExitActions>
                              <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </TriggerBase.ExitActions>
                            <TriggerBase.EnterActions>
                              <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </TriggerBase.EnterActions>
                          </Trigger>
                          <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <TriggerBase.ExitActions>
                              <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </TriggerBase.ExitActions>
                            <TriggerBase.EnterActions>
                              <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </TriggerBase.EnterActions>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Control.Template>
                  </Button>
                  <Button x:Name="PART_NextButton" HorizontalAlignment="Right" Width="28" Height="20" Focusable="false"
                          Grid.Column="2" Grid.Row="0">
                    <Control.Template>
                      <ControlTemplate TargetType="{x:Type Button}">
                        <FrameworkTemplate.Resources>
                          <Storyboard x:Key="HoverOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                          Duration="00:00:00.0010000">
                              <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                              <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                              <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                              <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                          <Storyboard x:Key="HoverOff">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                              <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                              <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                          Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                              <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                              <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                          </Storyboard>
                          <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                          <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                              <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                        </FrameworkTemplate.Resources>
                        <Grid Cursor="Hand">
                          <Border x:Name="MainBorder" Background="{TemplateBinding Control.Background}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                                  BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="5,5,5,5"/>
                          <Border x:Name="HoverBorder" BorderThickness="{TemplateBinding Control.BorderThickness}"
                                  CornerRadius="5,5,5,5" Background="{DynamicResource HoverBrush}">
                            <UIElement.OpacityMask>
                              <RadialGradientBrush GradientOrigin="0.503,0.938">
                                <Brush.RelativeTransform>
                                  <TransformGroup>
                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                    <TranslateTransform X="0" Y="0"/>
                                  </TransformGroup>
                                </Brush.RelativeTransform>
                                <GradientStop Color="#00000000" Offset="0"/>
                                <GradientStop Color="#00000000" Offset="1"/>
                              </RadialGradientBrush>
                            </UIElement.OpacityMask>
                          </Border>
                          <Grid>
                            <Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Width="6"
                                  Height="10" Data="M 282.875,231.875 L 282.875,240.375 288.625,236 Z"/>
                          </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <TriggerBase.ExitActions>
                              <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </TriggerBase.ExitActions>
                            <TriggerBase.EnterActions>
                              <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </TriggerBase.EnterActions>
                          </Trigger>
                          <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <TriggerBase.ExitActions>
                              <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </TriggerBase.ExitActions>
                            <TriggerBase.EnterActions>
                              <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </TriggerBase.EnterActions>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Control.Template>
                  </Button>
                  <Grid x:Name="PART_MonthView" Margin="6,-1,6,6" Visibility="Visible" ColumnSpan="3" Row="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                  </Grid>
                  <Grid x:Name="PART_YearView" Margin="6,3,7,6" Visibility="Hidden" ColumnSpan="3" Row="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                  </Grid>
                </Grid>
              </Border>
            </Border>
            <Rectangle x:Name="PART_DisabledVisual" Fill="#A5FFFFFF" Stretch="Fill" Stroke="#A5FFFFFF" StrokeThickness="1"
                       RadiusX="2" RadiusY="2" Opacity="0" Visibility="Collapsed"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="PART_DisabledVisual" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Value="Year"
                         Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}}">
              <Setter TargetName="PART_MonthView" Property="UIElement.Visibility" Value="Hidden"/>
              <Setter TargetName="PART_YearView" Property="UIElement.Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Value="Decade"
                         Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Calendar}}}">
              <Setter TargetName="PART_MonthView" Property="UIElement.Visibility" Value="Hidden"/>
              <Setter TargetName="PART_YearView" Property="UIElement.Visibility" Value="Visible"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearCalendarButton" TargetType="{x:Type CalendarButton}">
    <Setter Property="Control.Background" Value="{DynamicResource SelectedBackgroundBrush}"/>
    <Setter Property="FrameworkElement.MinWidth" Value="40"/>
    <Setter Property="FrameworkElement.MinHeight" Value="42"/>
    <Setter Property="Control.FontSize" Value="10"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarButton}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
              </DoubleAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            Duration="00:00:00.0010000">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                <SplineColorKeyFrame KeyTime="00:00:00.2500000" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.99"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOn">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            Duration="00:00:00.0010000">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border x:Name="SelectedBorder" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}"
                    Opacity="0">
              <Border.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                  <GradientStop Color="#19C8D6F3" Offset="0.0"/>
                  <GradientStop Color="{DynamicResource MainColorBottomGradient}" Offset="1.0"/>
                </LinearGradientBrush>
              </Border.Background>
              <UIElement.OpacityMask>
                <RadialGradientBrush GradientOrigin="0.503,0.938">
                  <Brush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                      <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </Brush.RelativeTransform>
                  <GradientStop Color="#FF000000" Offset="0"/>
                  <GradientStop Color="#FF000000" Offset="1"/>
                </RadialGradientBrush>
              </UIElement.OpacityMask>
            </Border>
            <Border x:Name="HoverBorder" BorderThickness="1,1,1,1" Background="{DynamicResource HoverBrush}"
                    BorderBrush="{DynamicResource NormalBorderBrush}">
              <UIElement.OpacityMask>
                <RadialGradientBrush GradientOrigin="0.503,0.938">
                  <Brush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                      <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </Brush.RelativeTransform>
                  <GradientStop Color="#00000000" Offset="0"/>
                  <GradientStop Color="#00000000" Offset="1"/>
                </RadialGradientBrush>
              </UIElement.OpacityMask>
            </Border>
            <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="1,0,1,1" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              TextElement.Foreground="#FF333333" Content="{TemplateBinding ContentControl.Content}"
                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource SelectedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearCalendarDayButton" TargetType="{x:Type CalendarDayButton}">
    <Setter Property="Control.Background" Value="{DynamicResource NormalBrush}"/>
    <Setter Property="FrameworkElement.MinWidth" Value="5"/>
    <Setter Property="FrameworkElement.MinHeight" Value="5"/>
    <Setter Property="Control.FontSize" Value="10"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarDayButton}">
          <FrameworkTemplate.Resources>
            <Storyboard x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
              </DoubleAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            Duration="00:00:00.0010000">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                <SplineColorKeyFrame KeyTime="00:00:00.2500000" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.99"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOn">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            Duration="00:00:00.0010000">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
              </ColorAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                            Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border x:Name="border" BorderThickness="1,1,1,1" Background="{DynamicResource NormalBrush}" Opacity="0"
                    BorderBrush="{x:Null}"/>
            <Border x:Name="SelectedBorder" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}"
                    Opacity="0">
              <Border.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                  <GradientStop Color="#19C8D6F3" Offset="0.0"/>
                  <GradientStop Color="{DynamicResource MainColorBottomGradient}" Offset="1.0"/>
                </LinearGradientBrush>
              </Border.Background>
              <UIElement.OpacityMask>
                <RadialGradientBrush GradientOrigin="0.503,0.938">
                  <Brush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                      <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </Brush.RelativeTransform>
                  <GradientStop Color="#FF000000" Offset="0"/>
                  <GradientStop Color="#FF000000" Offset="1"/>
                </RadialGradientBrush>
              </UIElement.OpacityMask>
            </Border>
            <Border x:Name="HoverBorder" BorderThickness="1,1,1,1" Background="{DynamicResource HoverBrush}"
                    BorderBrush="{DynamicResource NormalBorderBrush}">
              <UIElement.OpacityMask>
                <RadialGradientBrush GradientOrigin="0.503,0.938">
                  <Brush.RelativeTransform>
                    <TransformGroup>
                      <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                      <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </Brush.RelativeTransform>
                  <GradientStop Color="#00000000" Offset="0"/>
                  <GradientStop Color="#00000000" Offset="1"/>
                </RadialGradientBrush>
              </UIElement.OpacityMask>
            </Border>
            <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="5,1,5,1" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              TextElement.Foreground="#FF333333" Content="{TemplateBinding ContentControl.Content}"
                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"/>
            <Path x:Name="Blackout" Fill="#FF000000" Stretch="Fill" HorizontalAlignment="Stretch" Margin="3,3,3,3"
                  VerticalAlignment="Stretch" Opacity="0" RenderTransformOrigin="0.5,0.5"
                  Data="M 8.1772461,11.029181 L 10.433105,11.029181 11.700684,12.801641 12.973633,11.029181 15.191895,11.029181 12.844727,13.999395 15.21875,17.060919 12.962891,17.060919 11.673828,15.256231 10.352539,17.060919 8.1396484,17.060919 10.519043,14.042364 Z"/>
            <Rectangle x:Name="DayButtonFocusVisual" Stroke="#FF45D6FA" RadiusX="1" RadiusY="1" IsHitTestVisible="false"
                       Visibility="Collapsed"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="CalendarDayButton.IsSelected" Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource SelectedOn}"/>
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Property="CalendarDayButton.IsToday" Value="true">
              <Setter TargetName="border" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type DatePicker}">
    <Setter Property="Control.Foreground" Value="#FF333333"/>
    <Setter Property="DatePicker.IsTodayHighlighted" Value="true"/>
    <Setter Property="DatePicker.SelectedDateFormat" Value="Short"/>
    <Setter Property="Control.Background" Value="#00FFFFFF"/>
    <Setter Property="Control.Padding" Value="2,2,2,2"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
    <Setter Property="Control.BorderThickness" Value="1,1,1,1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}">
            <Border.Background>
              <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
            </Border.Background>
            <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
              <FrameworkElement.Resources>
                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                  <Grid>
                    <Grid FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="0,0,0,0"
                          VerticalAlignment="Center" Width="19" Height="18" Background="#11FFFFFF">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="20*"/>
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="23*"/>
                        <RowDefinition Height="19*"/>
                        <RowDefinition Height="19*"/>
                        <RowDefinition Height="19*"/>
                      </Grid.RowDefinitions>
                      <Border x:Name="Highlight" Margin="-1,-1,-1,-1" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0"
                              Grid.RowSpan="4" BorderBrush="#FF45D6FA" BorderThickness="1,1,1,1" CornerRadius="0,0,1,1"/>
                      <Border x:Name="Background" Margin="0,-1,0,0" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3"
                              Background="#FF1F3B53" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1"
                              CornerRadius="0.5,0.5,0.5,0.5"/>
                      <Border x:Name="BackgroundGradient" Margin="0,-1,0,0" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1"
                              Grid.RowSpan="3" BorderBrush="#BF000000" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5">
                        <Border.Background>
                          <LinearGradientBrush EndPoint="0.7,1" StartPoint="0.7,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                            <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                            <GradientStop Color="#C6FFFFFF" Offset="1"/>
                          </LinearGradientBrush>
                        </Border.Background>
                      </Border>
                      <Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="1">
                        <Shape.Fill>
                          <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                            <GradientStop Color="#FF4084BD"/>
                            <GradientStop Color="#FFAFCFEA" Offset="1"/>
                          </LinearGradientBrush>
                        </Shape.Fill>
                        <Shape.Stroke>
                          <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                            <GradientStop Color="#FF494949"/>
                            <GradientStop Color="#FF9F9F9F" Offset="1"/>
                          </LinearGradientBrush>
                        </Shape.Stroke>
                      </Rectangle>
                      <Path Fill="#FF2F2F2F" Stretch="Fill" HorizontalAlignment="Center" Margin="4,3,4,3"
                            VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.ColumnSpan="4"
                            Grid.Row="1" Grid.RowSpan="3"
                            Data="M 11.426758,8.4305077 L 11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277 C 9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 M 14.65086,8.4305077 L 18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703 C 15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L 14.881817,14.929531 C 15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L 14.65086,12.238613 Z"/>
                      <Ellipse Fill="#FFFFFFFF" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                               Width="3" Height="3" Grid.ColumnSpan="4"/>
                      <Border x:Name="DisabledVisual" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4"
                              BorderBrush="#B2FFFFFF" BorderThickness="1,1,1,1" CornerRadius="0,0,0.5,0.5"/>
                    </Grid>
                  </Grid>
                </ControlTemplate>
                <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
              </FrameworkElement.Resources>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Button x:Name="PART_Button" HorizontalAlignment="Left" Margin="3,0,3,0" VerticalAlignment="Top" Width="20"
                      Foreground="{TemplateBinding Control.Foreground}" Focusable="false" Grid.Column="1" Grid.Row="0"
                      Background="{DynamicResource NormalBrush}">
                <Control.Template>
                  <ControlTemplate TargetType="{x:Type Button}">
                    <FrameworkTemplate.Resources>
                      <Storyboard x:Key="HoverOn">
                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                      Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                      Duration="00:00:00.0010000">
                          <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                      Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                          <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                          <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                        </ColorAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                       Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                          <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                          <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                      <Storyboard x:Key="HoverOff">
                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                      Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                          <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                          <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                      Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                          <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                          <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                        </ColorAnimationUsingKeyFrames>
                      </Storyboard>
                      <Storyboard x:Key="PressedOn">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                      <Storyboard x:Key="PressedOff">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder"
                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                      </Storyboard>
                    </FrameworkTemplate.Resources>
                    <Grid>
                      <Grid FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="0,0,0,0"
                            VerticalAlignment="Center" Width="19" Height="18" Background="#11FFFFFF">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="20*"/>
                          <ColumnDefinition Width="20*"/>
                          <ColumnDefinition Width="20*"/>
                          <ColumnDefinition Width="20*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="23*"/>
                          <RowDefinition Height="19*"/>
                          <RowDefinition Height="19*"/>
                          <RowDefinition Height="19*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="MainBorder" Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3,3,3,3" Grid.RowSpan="8"
                                Grid.ColumnSpan="4"/>
                        <Border x:Name="HoverBorder" BorderThickness="{TemplateBinding Control.BorderThickness}"
                                CornerRadius="3,3,3,3" Background="{DynamicResource HoverBrush}" Grid.ColumnSpan="4"
                                Grid.RowSpan="8">
                          <UIElement.OpacityMask>
                            <RadialGradientBrush GradientOrigin="0.503,0.938">
                              <Brush.RelativeTransform>
                                <TransformGroup>
                                  <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                  <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                  <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                  <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                              </Brush.RelativeTransform>
                              <GradientStop Color="#00000000" Offset="0"/>
                              <GradientStop Color="#00000000" Offset="1"/>
                            </RadialGradientBrush>
                          </UIElement.OpacityMask>
                        </Border>
                        <Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="1" Fill="{DynamicResource NormalBrush}"
                                   Stroke="{DynamicResource NormalBorderBrush}" RadiusX="1" RadiusY="1"/>
                        <Path Fill="#FF2F2F2F" Stretch="Fill" HorizontalAlignment="Center" Margin="4,3,4,3"
                              VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.ColumnSpan="4"
                              Grid.Row="1" Grid.RowSpan="3"
                              Data="M 11.426758,8.4305077 L 11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277 C 9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 M 14.65086,8.4305077 L 18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703 C 15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L 14.881817,14.929531 C 15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L 14.65086,12.238613 Z"/>
                        <Ellipse Fill="#FFFFFFFF" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                 Width="3" Height="3" Grid.ColumnSpan="4"/>
                        <Border x:Name="DisabledVisual" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4"
                                BorderBrush="#B2FFFFFF" BorderThickness="1,1,1,1" CornerRadius="0,0,0.5,0.5"/>
                      </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="UIElement.IsMouseOver" Value="true">
                        <TriggerBase.ExitActions>
                          <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                        </TriggerBase.ExitActions>
                        <TriggerBase.EnterActions>
                          <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                        </TriggerBase.EnterActions>
                      </Trigger>
                      <Trigger Property="ButtonBase.IsPressed" Value="true">
                        <TriggerBase.ExitActions>
                          <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                        </TriggerBase.ExitActions>
                        <TriggerBase.EnterActions>
                          <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                        </TriggerBase.EnterActions>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Control.Template>
              </Button>
              <DatePickerTextBox x:Name="PART_TextBox" Foreground="{TemplateBinding Control.Foreground}"
                                 HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.Column="0"
                                 Grid.Row="0" Template="{DynamicResource NuclearDatePickerTextBox}"/>
              <Grid x:Name="PART_DisabledVisual" IsHitTestVisible="false" Opacity="0" Column="0" ColumnSpan="2" Row="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Grid.Column="0" Grid.Row="0"/>
                <Rectangle Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Margin="3,0,3,0" Width="19" Height="18" Grid.Column="1"
                           Grid.Row="0"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Bottom" StaysOpen="false"/>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="NuclearDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
    <FrameworkTemplate.Resources>
      <Storyboard x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </FrameworkTemplate.Resources>
    <Grid>
      <FrameworkElement.Resources>
        <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
      </FrameworkElement.Resources>
      <Border x:Name="Border1" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" Padding="2"
              CornerRadius="2">
        <Border.Background>
          <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
        </Border.Background>
      </Border>
      <Border x:Name="Border" Opacity="1" BorderBrush="{TemplateBinding Control.BorderBrush}"
              BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3,3,3,3"
              Padding="{TemplateBinding Control.Padding}">
        <Grid x:Name="WatermarkContent" Margin="3,0,0,0">
          <Border x:Name="ContentElement" BorderThickness="1,1,1,1" BorderBrush="{x:Null}"/>
          <Border BorderThickness="1,1,1,1" BorderBrush="{x:Null}">
            <ContentControl x:Name="PART_Watermark" Content="Show Calendar" Padding="2,2,2,2" Focusable="false"
                            IsHitTestVisible="false" Opacity="0" Style="{DynamicResource ContentControlStyle1}"/>
          </Border>
          <ScrollViewer x:Name="PART_ContentHost" Margin="0,0,0,0"
                        HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          <Border x:Name="FocusVisual" IsHitTestVisible="false" Opacity="0" BorderBrush="#FF45D6FA"
                  CornerRadius="1,1,1,1"/>
        </Grid>
      </Border>
      <Border x:Name="border" IsHitTestVisible="false" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2"
              Opacity="0">
        <Border.BorderBrush>
          <SolidColorBrush Color="{DynamicResource BottomGradientMouseOver}"/>
        </Border.BorderBrush>
      </Border>
      <Border x:Name="HoverBorder" BorderBrush="{DynamicResource HoverBrush}" BorderThickness="1,1,1,1"
              Margin="-1,-1,-1,-1" CornerRadius="3,3,3,3" Opacity="0" IsHitTestVisible="false"/>
      <Border x:Name="FocusedBorder" Margin="-1,-1,-1,-1" Opacity="0" BorderBrush="{DynamicResource HoverBrush}"
              BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" IsHitTestVisible="false"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsFocused" Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
        </TriggerBase.EnterActions>
      </Trigger>
      <MultiTrigger>
        <TriggerBase.ExitActions>
          <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
        </TriggerBase.EnterActions>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="UIElement.IsFocused" Value="false"/>
        </MultiTrigger.Conditions>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="ContentControlStyle1" TargetType="{x:Type ContentControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>