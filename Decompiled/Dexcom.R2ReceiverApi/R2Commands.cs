// Type: Dexcom.R2Receiver.R2Commands
// Assembly: Dexcom.R2ReceiverApi, Version=4.0.0.1, Culture=neutral, PublicKeyToken=71077f6d94a459dc
// MVID: CFBF21F8-8DCC-4821-9279-3746E4DC5499
// Assembly location: C:\Program Files (x86)\Dexcom\Dexcom Studio 12.0.3.43\Dexcom.R2ReceiverApi.dll

namespace Dexcom.R2Receiver
{
  public enum R2Commands : byte
  {
    Unknown = (byte) 0,
    ReadBlock = (byte) 1,
    WriteBlock = (byte) 2,
    EraseBlock = (byte) 3,
    ReadFirmware = (byte) 4,
    WriteFirmware = (byte) 5,
    ACK = (byte) 6,
    ReadHWConfig = (byte) 7,
    WriteHWConfig = (byte) 8,
    ReadBios = (byte) 9,
    WriteBios = (byte) 10,
    ReadBiosHeader = (byte) 11,
    ReadFirmwareHeader = (byte) 12,
    ReadRTC = (byte) 13,
    WriteRTC = (byte) 14,
    ResetReceiver = (byte) 15,
    ReadSettings = (byte) 16,
    WriteSettings = (byte) 17,
    WriteTrim = (byte) 18,
    ReadInternalTime = (byte) 19,
    InvalidParam = (byte) 20,
    NAK = (byte) 21,
    InvalidCommand = (byte) 22,
    ReadDatabase = (byte) 23,
    EnableTransmitter = (byte) 24,
    IsEventLogEmpty = (byte) 25,
    IsErrorLogEmpty = (byte) 26,
    AmIFirmware = (byte) 27,
    ReadDatabaseRevision = (byte) 28,
    RF_TestPacket = (byte) 29,
    PC_Test = (byte) 30,
    ReadADC = (byte) 31,
    ReadBootFailureReasons = (byte) 32,
    SleepUntilReset = (byte) 33,
    ReadLastButtonPressed = (byte) 34,
    PeekMemory = (byte) 35,
    PokeMemory = (byte) 36,
    ReadSensorImplantDate = (byte) 37,
    WriteSensorImplantData = (byte) 38,
    ReadNumberOf3DayLicenses = (byte) 39,
    ReadNumberOf7DayLicenses = (byte) 40,
    ReadTransmitterId = (byte) 41,
    WriteTransmitterId = (byte) 42,
    ReadLowGlucoseThreshold = (byte) 43,
    WriteLowGlucoseThreshold = (byte) 44,
    ReadHighGlucoseThreshold = (byte) 45,
    WriteHighGlucoseThreshold = (byte) 46,
    IsBlinded = (byte) 47,
    WriteBlindedMode = (byte) 48,
    ReadDisplayTimeOffset = (byte) 55,
    WriteDisplayTimeOffset = (byte) 56,
    ReadGMT = (byte) 57,
    WriteGMT = (byte) 58,
    GetSensorRecords = (byte) 61,
    ClearSensorRecords = (byte) 62,
    EnterFunctionalTestMode = (byte) 63,
    ReadHardwareBoardId = (byte) 64,
    WriteUserLowAlertType = (byte) 65,
    WriteUserHighAlertType = (byte) 66,
    WriteOutOfRangeAlertType = (byte) 67,
    WriteOtherAlertType = (byte) 68,
    WriteUpRateAlertType = (byte) 69,
    WriteDownRateAlertType = (byte) 70,
    WriteUserLowSnooze = (byte) 71,
    WriteUserHighSnooze = (byte) 72,
    WriteOutOfRangeTime = (byte) 73,
    WriteUpRate = (byte) 74,
    WriteDownRate = (byte) 75,
    ClearRtcResetTime = (byte) 76,
    ReadErrorLogInfo = (byte) 77,
    ReadBatteryVoltage = (byte) 78,
  }
}
